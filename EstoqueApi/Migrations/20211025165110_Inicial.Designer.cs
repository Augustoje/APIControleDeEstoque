// <auto-generated />
using System;
using EstoqueApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstoqueApi.Migrations
{
    [DbContext(typeof(ProdutoContext))]
    [Migration("20211025165110_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("EstoqueApi.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nomecategoria")
                        .HasColumnType("longtext");

                    b.Property<int?>("produtoCategoriaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("produtoCategoriaID");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("EstoqueApi.Models.Movimentacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("data")
                        .HasColumnType("longtext");

                    b.Property<string>("descricoes")
                        .HasColumnType("longtext");

                    b.Property<int>("produtoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("produtoID");

                    b.ToTable("Movimentacao");
                });

            modelBuilder.Entity("EstoqueApi.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoCategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("categoriaID")
                        .HasColumnType("int");

                    b.Property<int>("codigo")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("imagem")
                        .HasColumnType("longtext");

                    b.Property<string>("modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<string>("tamanho")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ProdutoCategoriaID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("EstoqueApi.Models.ProdutoCategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProdutosID")
                        .HasColumnType("int");

                    b.Property<int>("categoriasID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ProdutoCategoria");
                });

            modelBuilder.Entity("EstoqueApi.Models.Categoria", b =>
                {
                    b.HasOne("EstoqueApi.Models.ProdutoCategoria", "produtoCategoria")
                        .WithMany("Categoria")
                        .HasForeignKey("produtoCategoriaID");

                    b.Navigation("produtoCategoria");
                });

            modelBuilder.Entity("EstoqueApi.Models.Movimentacao", b =>
                {
                    b.HasOne("EstoqueApi.Models.Produto", "Produto")
                        .WithMany("Movimentacao")
                        .HasForeignKey("produtoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("EstoqueApi.Models.Produto", b =>
                {
                    b.HasOne("EstoqueApi.Models.ProdutoCategoria", "ProdutoCategoria")
                        .WithMany("Produto")
                        .HasForeignKey("ProdutoCategoriaID");

                    b.Navigation("ProdutoCategoria");
                });

            modelBuilder.Entity("EstoqueApi.Models.Produto", b =>
                {
                    b.Navigation("Movimentacao");
                });

            modelBuilder.Entity("EstoqueApi.Models.ProdutoCategoria", b =>
                {
                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
